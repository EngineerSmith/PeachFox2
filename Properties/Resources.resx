<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="eraser" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFcSURBVFhH7Zc9SgNRFEYDsZQIxtYUgiB2Cu7ALQQE61SuxOgytHEnFqIrSBXUxthYWKnfl8yF
        y/P93DszMhY5cEh8xPkOwyikB2bwpiO5vXzTFcvtdUBbASPYX70101rAIXyFt9AT0UrAAXyG35V3cANa
        aBwQjnsjGgWkxkVLRO2A0rhYiqgVYB0XcxHuAO+4mIpwBdQdF2MR5gD5O49d2GP4f8IUoMfv4Sl8r372
        +gi3oFAM0Lf9AW5DcgTfYDiQk+NDqMkGpMYFT0RsnCQDSuOCJSI1TqIB1nHhGKYicuPkV8AAvkD+Ml/1
        A5PjBIYPZmmcRO/ABfyCvMglD4ycQc84iQaQCZSIax4U2IdzyM8/wR1oIRlAdMQVDxLUHSfZAKIjpjwI
        aDJOigFEPxN80BbKT8hz+lGdlRxDwRRA9J1o6jkUzAFkF+614CYUXAF/wTrgfwR0+PW8N/sBUg40vxfV
        NGgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="move" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEHSURBVFhH7ZUxDsIwDEV7TMTAAhNMsDCBuBlHAz+plqyQtE4bh6VPemrVus6XOvxhYyX70b9w
        FD+j3HflIurhKs+6cBXTw1XehXIXcwdbmQnhKb4T9dD0ObPhvEQNwH13ugR4jNcc3gBTOya5ifzPEt4A
        7GBXFWeRxa0CMMNOFydRF7cMgOye5CDqMPIxy0vqXO6dagMgZ2TZiXYwUs76gVbLDUdYbFDbcBjxC2ab
        0zYdH5dguc5xX8IGcDemNl7LANVNSau1CrC4IadazRsgrBm9AcLoHoBW439aNUD6fHEDzkGr6aElq5uv
        Fm3KnO7GW4ttTHW26Vpjm7PYcNHQatlm2/AxDF8kitlRXSo0AAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="paint" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFNSURBVFhH7dY/KEVhGMfxs1ncVcnmz6JksLEomUhR6hZKFmW2WTDclU2UCWUwWC0MIrEymywK
        mYx8f+596untNb4Pg199Oufc5fndc9/z3lP9tYy2jr+SBXziCBP6IDpDUAGzjPDswpdYQ2jacQ5fYguh
        6cEDfIkDtCEsI3iBL3GNLoRlBr6AvGEQYVlBWkLGEJYN5ErUEZb08TSbCMspciVOEJIO3CBXQo9tSAbw
        iFwJ0UZWPOP4QK7AM3pRPPPIFZB79KN4VpEOX8IkDqE7VTw7sOHdmHXXEvKCc4k9pMPP0MAwiqazdbyD
        DV/XB2QROg9ZE/rGGr7/fdVcB1boHVaqaC4wDS1GG+5to3i0Gf3036FNLCTHyBWQkCdDP4Mf+uTOtTCL
        p4ZX+BJahHYMiQ00ugtTuEVY0hK67kNo5qA9wd6yr6AX3v+QqvoC+lidruVtqI0AAAAASUVORK5CYII=
</value>
  </data>
</root>